import java.sql.*;

public class ProductList {
    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/mydatabase";
    private static final String USERNAME = "your_username";
    private static final String PASSWORD = "your_password";
    public static void main(String[] args) {
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;
        try {
            connection = DriverManager.getConnection(JDBC_URL, USERNAME, PASSWORD);
            statement = connection.createStatement();
            statement.executeUpdate("CREATE TABLE IF NOT EXISTS Product ("
                                   + "id INT AUTO_INCREMENT PRIMARY KEY,"
                                   + "name VARCHAR(100),"
                                   + "price_per_unit DOUBLE,"
                                   + "active_for_sell TINYINT(1)"
                                   + ")");
            statement.executeUpdate("INSERT INTO Product (name, price_per_unit, active_for_sell) VALUES"
                                   + "('Coke', 2.00, 1), "
                                   + "('Pepsi', 2.00, 1), "
                                   + "('Kizz', 1.50, 1), "
                                   + "('Redbull', 2.00, 0)");
            resultSet = statement.executeQuery("SELECT id, name, price_per_unit, active_for_sell FROM Product");
            System.out.println("id\tname\t\tprice_per_unit\tactive_for_sell");
            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String name = resultSet.getString("name");
                double pricePerUnit = resultSet.getDouble("price_per_unit");
                boolean activeForSell = resultSet.getBoolean("active_for_sell");

                System.out.printf("%d\t%s\t\t%.2f\t\t%s%n", id, name, pricePerUnit, activeForSell ? "Yes" : "No");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace(); }}
    }}
